/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainImport } from './routes/main'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as authLayoutImport } from './routes/(auth)/layout'
import { Route as authSigninPageImport } from './routes/(auth)/signin/page'
import { Route as authSigninLoadingImport } from './routes/(auth)/signin/loading'
import { Route as authOauthSignedinPageImport } from './routes/(auth)/oauth/signedin/page'

// Create/Update Routes

const MainRoute = MainImport.update({
  id: '/main',
  path: '/main',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authLayoutRoute = authLayoutImport.update({
  id: '/(auth)/layout',
  path: '/layout',
  getParentRoute: () => rootRoute,
} as any)

const authSigninPageRoute = authSigninPageImport.update({
  id: '/(auth)/signin/page',
  path: '/signin/page',
  getParentRoute: () => rootRoute,
} as any)

const authSigninLoadingRoute = authSigninLoadingImport.update({
  id: '/(auth)/signin/loading',
  path: '/signin/loading',
  getParentRoute: () => rootRoute,
} as any)

const authOauthSignedinPageRoute = authOauthSignedinPageImport.update({
  id: '/(auth)/oauth/signedin/page',
  path: '/oauth/signedin/page',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/main': {
      id: '/main'
      path: '/main'
      fullPath: '/main'
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/layout': {
      id: '/(auth)/layout'
      path: '/layout'
      fullPath: '/layout'
      preLoaderRoute: typeof authLayoutImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signin/loading': {
      id: '/(auth)/signin/loading'
      path: '/signin/loading'
      fullPath: '/signin/loading'
      preLoaderRoute: typeof authSigninLoadingImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signin/page': {
      id: '/(auth)/signin/page'
      path: '/signin/page'
      fullPath: '/signin/page'
      preLoaderRoute: typeof authSigninPageImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/oauth/signedin/page': {
      id: '/(auth)/oauth/signedin/page'
      path: '/oauth/signedin/page'
      fullPath: '/oauth/signedin/page'
      preLoaderRoute: typeof authOauthSignedinPageImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/main': typeof MainRoute
  '/layout': typeof authLayoutRoute
  '/signin/loading': typeof authSigninLoadingRoute
  '/signin/page': typeof authSigninPageRoute
  '/oauth/signedin/page': typeof authOauthSignedinPageRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/main': typeof MainRoute
  '/layout': typeof authLayoutRoute
  '/signin/loading': typeof authSigninLoadingRoute
  '/signin/page': typeof authSigninPageRoute
  '/oauth/signedin/page': typeof authOauthSignedinPageRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/main': typeof MainRoute
  '/(auth)/layout': typeof authLayoutRoute
  '/(auth)/signin/loading': typeof authSigninLoadingRoute
  '/(auth)/signin/page': typeof authSigninPageRoute
  '/(auth)/oauth/signedin/page': typeof authOauthSignedinPageRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/main'
    | '/layout'
    | '/signin/loading'
    | '/signin/page'
    | '/oauth/signedin/page'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/main'
    | '/layout'
    | '/signin/loading'
    | '/signin/page'
    | '/oauth/signedin/page'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/main'
    | '/(auth)/layout'
    | '/(auth)/signin/loading'
    | '/(auth)/signin/page'
    | '/(auth)/oauth/signedin/page'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  MainRoute: typeof MainRoute
  authLayoutRoute: typeof authLayoutRoute
  authSigninLoadingRoute: typeof authSigninLoadingRoute
  authSigninPageRoute: typeof authSigninPageRoute
  authOauthSignedinPageRoute: typeof authOauthSignedinPageRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  MainRoute: MainRoute,
  authLayoutRoute: authLayoutRoute,
  authSigninLoadingRoute: authSigninLoadingRoute,
  authSigninPageRoute: authSigninPageRoute,
  authOauthSignedinPageRoute: authOauthSignedinPageRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/main",
        "/(auth)/layout",
        "/(auth)/signin/loading",
        "/(auth)/signin/page",
        "/(auth)/oauth/signedin/page"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/main": {
      "filePath": "main.tsx"
    },
    "/(auth)/layout": {
      "filePath": "(auth)/layout.tsx"
    },
    "/(auth)/signin/loading": {
      "filePath": "(auth)/signin/loading.tsx"
    },
    "/(auth)/signin/page": {
      "filePath": "(auth)/signin/page.tsx"
    },
    "/(auth)/oauth/signedin/page": {
      "filePath": "(auth)/oauth/signedin/page.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
